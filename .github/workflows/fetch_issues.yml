name: Fetch Issues for Public Scrumboard

on:
  schedule:
    - cron: '*/10 * * * *'  # LÃ¤uft alle 10 Minuten
  workflow_dispatch:

jobs:
  fetch_issues:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Fetch Issues from GitHub Project
        env:
          GITHUB_TOKEN: ${{ secrets.PAGE_GITHUB }}
        run: |
          echo "==== Sende API-Anfrage ===="
          curl -X POST -H "Authorization: Bearer $GITHUB_TOKEN" \
               -H "Content-Type: application/json" \
               -d '{
                  "query": "{ node(id: \"PVT_kwHOAcHVqM4AzEVA\") { ... on ProjectV2 { items(first: 100) { nodes { content { ... on Issue { title number url } } projectItems(first: 1) { nodes { fieldValues(first: 10) { nodes { ... on ProjectV2ItemFieldSingleSelectValue { field { name } name } } } } } } } } } } }"
                }' \
                https://api.github.com/graphql | tee response.json
          
          echo "==== API-Response ausgeben ===="
          cat response.json

      - name: Process API Response and Create issues.json
        run: |
          jq 'if .data.node.items.nodes then .data.node.items.nodes | map({title: .content.title, number: .content.number, url: .content.url, status: (.content.projectItems.nodes[0].fieldValues.nodes[] | select(.field.name == "Status") | .name)}) else [] end' response.json > issues.json
          
          echo "==== Generierte issues.json ===="
          cat issues.json

      - name: Commit and Push Issues Data
        run: |
          if [ -s issues.json ]; then
            git config --global user.name "github-actions"
            git config --global user.email "github-actions@github.com"
            git add issues.json
            git commit -m "Updated issues JSON" || echo "No changes to commit"
            git push
          else
            echo "issues.json ist leer, nichts zu committen."
          fi
